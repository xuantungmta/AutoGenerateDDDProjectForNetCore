using AutoGenerateDDDProjectForNetCore.models;
using System.Data;
using System.Data.SqlClient;

namespace AutoGenerateDDDProjectForNetCore.services
{

    public class TableService : SQLServiceBase
    {
        private string DatabaseName;

        public TableService(string connetionString, string databaseName) : base(connetionString)
        {
            this.DatabaseName = databaseName;
        }

        public string[] GetAllTable()
        {
            string query = $"USE [{DatabaseName}];SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES";
            SqlCommand command = new SqlCommand(query);

            DataTable data = ExecuteReaderData(command);
            if (data != null)
            {
                List<string> databases = new List<string>();
                //databases.Add("All tables");
                for (int i = 0; i < data.Rows.Count; i++)
                {
                    databases.Add(data.Rows[i]["TABLE_NAME"].ToString());
                }
                databases.Remove("sysdiagrams");
                databases.Sort();
                return databases.ToArray();
            }
            else return Array.Empty<string>();
        }

        public ColumnModel[] GetAllColumn(string tableName)
        {
            string query = $"USE [{DatabaseName}];SELECT * FROM sys.columns WHERE object_id = OBJECT_ID('{tableName}') ";
            SqlCommand command = new SqlCommand(query);

            DataTable data = ExecuteReaderData(command);
            if (data != null)
            {
                List<ColumnModel> databases = new List<ColumnModel>();
                for (int i = 0; i < data.Rows.Count; i++)
                {
                    databases.Add(new ColumnModel
                    {
                        IsIdentity = Convert.ToInt32(data.Rows[i]["is_identity"]) == 1,
                        IsNullable = Convert.ToInt32(data.Rows[i]["is_nullable"]) == 1,
                        MaxLenght = Convert.ToInt32(data.Rows[i]["max_length"]),
                        Name = Convert.ToString(data.Rows[i]["name"]),
                        TypeData = (SQLDbType)Convert.ToInt32(data.Rows[i]["user_type_id"])
                    });
                }
                return databases.ToArray();
            }
            else return null;
        }
    }
}